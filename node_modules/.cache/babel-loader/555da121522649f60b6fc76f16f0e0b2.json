{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/fredrickevans/Desktop/Ecom/freddiesgaming/src/Components/Filter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ProductsJson from './Products.json';\n\nconst Filter = () => {\n  _s();\n\n  const [searchProducts, setSearchProducts] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"Search\",\n        placeholder: \"Search Products\",\n        onChange: event => {\n          setSearchProducts(event.target.values);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), ProductsJson.filter(val => {\n      if (searchProducts === \"\") {\n        return val;\n      } else if (val.image.toLowerCase().includes(searchProducts.toLowerCase())) {\n        return val;\n      }\n    }).map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: val.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: val.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: val.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Filter, \"JtyEZAtAPPrIRECdZat45bhlrMs=\");\n\n_c = Filter;\nexport default Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/Users/fredrickevans/Desktop/Ecom/freddiesgaming/src/Components/Filter.js"],"names":["React","useState","ProductsJson","Filter","searchProducts","setSearchProducts","event","target","values","filter","val","image","toLowerCase","includes","map","key","name","price"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAIA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,EAApD;AACA,sBACI;AAAA,4BACI;AAAA,mCAAQ;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,WAAW,EAAC,iBAA7C;AAA+D,QAAA,QAAQ,EAAEK,KAAK,IAAI;AAAED,UAAAA,iBAAiB,CAACC,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAjB;AAAwC;AAA5H;AAAA;AAAA;AAAA;AAAA,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,YAAY,CAACO,MAAb,CAAqBC,GAAD,IAAS;AAC1B,UAAIN,cAAc,KAAK,EAAvB,EAA2B;AACvB,eAAOM,GAAP;AACH,OAFD,MAEO,IAAIA,GAAG,CAACC,KAAJ,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCT,cAAc,CAACQ,WAAf,EAAjC,CAAJ,EAAoE;AACvE,eAAOF,GAAP;AACH;AACJ,KANA,EAMEI,GANF,CAMM,CAACJ,GAAD,EAAMK,GAAN,KAAc;AACjB,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA,oBAAIL,GAAG,CAACC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAID,GAAG,CAACM;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAIN,GAAG,CAACO;AAAR;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA2BF,GAA3B;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KAdA,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAtBD;;GAAMZ,M;;KAAAA,M;AAuBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport ProductsJson from './Products.json'\n\n\n\nconst Filter = () => {\n    const [searchProducts, setSearchProducts] = useState()\n    return (\n        <div>\n            <label> <input type=\"text\" name=\"Search\" placeholder=\"Search Products\" onChange={event => { setSearchProducts(event.target.values) }} /></label>\n            {ProductsJson.filter((val) => {\n                if (searchProducts === \"\") {\n                    return val\n                } else if (val.image.toLowerCase().includes(searchProducts.toLowerCase())) {\n                    return val\n                }\n            }).map((val, key) => {\n                return (\n                    <div className=\"user\" key={key}>\n                        <p>{val.image}</p>\n                        <p>{val.name}</p>\n                        <p>{val.price}</p>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\nexport default Filter;"]},"metadata":{},"sourceType":"module"}